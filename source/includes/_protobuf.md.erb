# Data Schema (Protobuf)
We use [Google Protocol Buffers](https://developers.google.com/protocolbuffers) or Protobuf to define our data schema. Protobuf provides bindings to generate classes in most programming languages. This is the preferred method for accessing our APIs since once you use Protobuf you can benefit from the performance benefits of Protobuf. You can request JSON instead but you'll lose the benefits of using binary.
## Installing Protobuf
### Debian/Ubuntu
<aside>
apt-get install protobuf-compiler
</aside>

###MacOS:
<aside>
brew install protobuf
</aside>

## Language specific bindings
<%= partial 'includes/php/protobuf' %>

Our Protobuf schema can be found on [Github](https://github.com/Cloudbet/schema)

Check one of the sample scripts to `gen-*.sh` in order to generate accessors for your required language as below.

####Ruby:
<aside>
gem install protobuf
</aside>

####Go:
<aside>
go get github.com/golang/protobuf/proto<br/>
go get github.com/golang/protobuf/protoc-gen-go
</aside>

####Python:
<aside>
export PYTHONPATH=~/python<br/>
easy_install -d ~/python protobuf
</aside>

####PHP:

Install [this](https://github.com/allegro/php-protobuf) protobuf PHP extension as described in the project's README.

<aside>
./gen-php.sh /path/to/php-protobuf/protoc-gen-php.php
</aside>

This will create the PHP proto files in the php directory. You can then run example.php in the root directory to see most of the API requests in action.

<aside>
php example.php
</aside>

n.b. This was tested using [phpbrew](https://github.com/phpbrew/phpbrew) and PHP version 5.6.18 (7+ is not supported yet).